import{_ as s,c as n,o as a,a as l}from"./app.3c904b4a.js";const o='{"title":"Built-in Components","description":"","frontmatter":{"pageClass":"api"},"headers":[{"level":2,"title":"<Transition>","slug":"transition"},{"level":2,"title":"<TransitionGroup>","slug":"transitiongroup"},{"level":2,"title":"<KeepAlive>","slug":"keepalive"},{"level":2,"title":"<Teleport>","slug":"teleport"},{"level":2,"title":"<Suspense>","slug":"suspense"}],"relativePath":"api/built-in-components.md"}',p={},e=[l('<div class="warning custom-block"><p class="custom-block-title">현재 이 문서는 번역 작업이 진행중입니다</p></div><h1 id="built-in-components" tabindex="-1">Built-in Components <a class="header-anchor" href="#built-in-components" aria-hidden="true">#</a></h1><h1 id="내장-컴포넌트" tabindex="-1">내장 컴포넌트 <a class="header-anchor" href="#내장-컴포넌트" aria-hidden="true">#</a></h1><div class="info custom-block"><p class="custom-block-title">Registration and Usage</p><p>Built-in components can be used directly in templates without needing to be registered. They are also tree-shakeable: they are only included in the build when they are used.</p><p>When using them in <a href="/guide/extras/render-function.html">render functions</a>, they need to be imported explicitly. For example:</p><div class="language-js"><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Transition</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">h</span><span style="color:#A6ACCD;">(Transition</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* props */</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div></div><div class="info custom-block"><p class="custom-block-title">등록과 사용</p><p>내장 컴포넌트는 등록할 필요없이 템플릿에서 바로 사용할수 있습니다. 내장 컴포넌트는 트리 쉐이킹이 되기 때문에 사용 할때에만 포함됩니다.</p><p><a href="/guide/extras/render-function.html">render 함수</a>에서 사용할 때는 명시적으로 임포트 해야 합니다.</p><div class="language-js"><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Transition</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">h</span><span style="color:#A6ACCD;">(Transition</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* props */</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>\n<span class="line"></span></code></pre></div></div><h2 id="transition" tabindex="-1"><code>&lt;Transition&gt;</code> <a class="header-anchor" href="#transition" aria-hidden="true">#</a></h2><p>Provides animated transition effects to a <strong>single</strong> element or component.</p><p><strong>단일</strong> 엘리먼트나 컴포넌트에 애니메이션 트랜지션 효과를 제공합니다.</p><ul><li><p><strong>Props</strong></p><div class="language-ts"><pre><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TransitionProps</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Used to automatically generate transition CSS class names.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * e.g. `name: fade&#39;` will auto expand to `.fade-enter`,</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * `.fade-enter-active`, etc.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 트랜지션 CSS 클래스 이름을 자동으로 생성하는 데 사용됩니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 예. `name: fade&#39;` 은 자동으로 `.fade-enter`,</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * `.fade-enter-active`등의 이름으로 확장됩니다. </span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Whether to apply CSS transition classes.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Default: true</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * CSS 트랜지션 클래스를 적용할지 여부입니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 기본값: true</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">css</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Specifies the type of transition events to wait for to</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * determine transition end timing.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Default behavior is auto detecting the type that has</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * longer duration.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 트랜지션 종료 타이밍을 결정하기 위해 대기할 트랜지션 이벤트의 유형을 지정합니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 기본 동작은 지속 시간이 더 긴 유형을 자동으로 감지하는 것입니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">transition</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">animation</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Specifies explicit durations of the transition.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Default behavior is wait for the first `transitionend`</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * or `animationend` event on the root transition element.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 트랜지션의 명시적 지속 시간을 지정합니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 기본 동작은 루트 트랜지션엘리먼트의 첫 번째 `transitionend` 또는 `animationend` 이벤트를 기다리는 것입니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">duration</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">enter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">leave</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Controls the timing sequence of leaving/entering transitions.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Default behavior is simultaneous.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 퇴장/진입 트랜지션의 타이밍 순서를 제어합니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 기본 동작은 동시입니다. </span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mode</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">in-out</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">out-in</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Whether to apply transition on initial render.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Default: false</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 초기 렌더링에 트랜지션을 적용할지 여부입니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 기본값: false</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">appear</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Props for customizing transition classes.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Use kebab-case in templates, e.g. enter-from-class=&quot;xxx&quot;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 트랜지션 클래스 커스터마이징을 위한 props. </span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 템플릿에서는 케밥 케이스를 사용하세요. 예) enter-from-class=&quot;xxx&quot;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">enterFromClass</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">enterActiveClass</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">enterToClass</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">appearFromClass</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">appearActiveClass</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">appearToClass</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">leaveFromClass</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">leaveActiveClass</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">leaveToClass</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div></li><li><p><strong>Events</strong></p><ul><li><code>@before-enter</code></li><li><code>@before-leave</code></li><li><code>@enter</code></li><li><code>@leave</code></li><li><code>@appear</code></li><li><code>@after-enter</code></li><li><code>@after-leave</code></li><li><code>@after-appear</code></li><li><code>@enter-cancelled</code></li><li><code>@leave-cancelled</code> (<code>v-show</code> only)</li><li><code>@appear-cancelled</code></li></ul></li><li><p><strong>Example</strong></p><p>Simple element:</p><p>단순 엘리먼트</p><div class="language-vue-html"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">toggled content</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>Dynamic component, with transition mode + animate on appear:</p><p>트랜지션 모드와 등장시 애니메이션을 가지는 동적 컴포넌트:</p><div class="language-vue-html"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Transition</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fade</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">mode</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">out-in</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">appear</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>Listening to transition events:</p><p>트랜지션 이벤트 듣기:</p><div class="language-vue-html"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Transition</span><span style="color:#89DDFF;"> @</span><span style="color:#C792EA;">after-enter</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">onTransitionComplete</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-show</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">ok</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">toggled content</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div></li><li><p><strong>See also:</strong> <a href="/guide/built-ins/transition.html"><code>&lt;Transition&gt;</code> Guide</a></p></li></ul><h2 id="transitiongroup" tabindex="-1"><code>&lt;TransitionGroup&gt;</code> <a class="header-anchor" href="#transitiongroup" aria-hidden="true">#</a></h2><p>Provides transition effects for <strong>multiple</strong> elements or components in a list.</p><p>리스트내에 있는 <strong>여러</strong> 앨레먼트 또는 컴포넌트에 대한 전환 효과를 제공합니다.</p><ul><li><p><strong>Props</strong></p><p><code>&lt;TransitionGroup&gt;</code> accepts the same props as <code>&lt;Transition&gt;</code> except <code>mode</code>, plus two additional props:</p><p><code>&lt;TransitionGroup&gt;</code>은 <code>mode</code>를 제외하고 <code>&lt;Transition&gt;</code>과 동일한 props와 두 개의 추가 props를 허용합니다.</p><div class="language-ts"><pre><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TransitionGroupProps</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Omit</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">TransitionProps</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mode</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * If not defined, renders as a fragment.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 정의하지 않으면 프래그먼트로 렌더링됩니다. </span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">tag</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * For customizing the CSS class applied during move transitions.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Use kebab-case in templates, e.g. move-class=&quot;xxx&quot;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 이동 전환 중에 적용된 CSS 클래스를 사용자 정의합니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 템플릿에서는 케밥 케이스를 사용하세요. 예) enter-from-class=&quot;xxx&quot;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">moveClass</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div></li><li><p><strong>Events</strong></p><p><code>&lt;TransitionGroup&gt;</code> emits the same events as <code>&lt;Transition&gt;</code>. <code>&lt;TransitionGroup&gt;</code>는 <code>&lt;Transition&gt;</code>과 동일한 이벤트를 발생시킵니다.</p></li><li><p><strong>Details</strong></p><p>By default, <code>&lt;TransitionGroup&gt;</code> doesn&#39;t render a wrapper DOM element, but one can be defined via the <code>tag</code> prop.</p><p>기본적으로 <code>&lt;TransitionGroup&gt;</code>은 래퍼(wrapper) DOM엘리먼트를 렌더링하지 않지만 <code>tag</code> 소품을 통해 정의할 수 있습니다.</p><p>Note that every child in a <code>&lt;transition-group&gt;</code> must be <a href="/guide/essentials/list.html#maintaining-state-with-key"><strong>uniquely keyed</strong></a> for the animations to work properly.</p><p><code>&lt;TransitionGroup&gt;</code> 내의 모든 자식은 애니메이션이 정상적으로 동작하기 위해 반드시 <a href="/guide/essentials/list.html#maintaining-state-with-key"><strong>유일한 키를 부여받아야</strong></a>합니다.</p><p><code>&lt;TransitionGroup&gt;</code> supports moving transitions via CSS transform. When a child&#39;s position on screen has changed after an update, it will get applied a moving CSS class (auto generated from the <code>name</code> attribute or configured with the <code>move-class</code> prop). If the CSS <code>transform</code> property is &quot;transition-able&quot; when the moving class is applied, the element will be smoothly animated to its destination using the <a href="https://aerotwist.com/blog/flip-your-animations/" target="_blank" rel="noopener noreferrer">FLIP technique</a>.</p><p><code>&lt;TransitionGroup&gt;</code>은 CSS 변환을 통한 이동 트랜지션을 지원합니다. 업데이트 후 화면에서 자녀의 위치가 변경되면 이동 CSS 클래스가 적용됩니다(<code>name</code> 속성에서 자동 생성되거나 <code>move-class</code> 소품으로 구성됨). 움직이는 클래스가 적용될 때 CSS의 <code>transform</code> 속성이 &quot;전환 가능&quot;이면 [FLIP 기술](<a href="https://aerotwist.com/blog/flip-your-" target="_blank" rel="noopener noreferrer">https://aerotwist.com/blog/flip-your-</a> 애니메이션/).</p></li><li><p><strong>Example</strong></p><div class="language-vue-html"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">TransitionGroup</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">tag</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ul</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">slide</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-for</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;"> in </span><span style="color:#A6ACCD;">items</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">key</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{{</span><span style="color:#A6ACCD;"> item</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">text </span><span style="color:#89DDFF;">}}</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">TransitionGroup</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div></li><li><p><strong>See also:</strong> <a href="/guide/built-ins/transition-group.html">Guide - TransitionGroup</a></p></li><li><p><strong>참조:</strong> <a href="/guide/built-ins/transition-group.html">가이드 - 트랜지션 그룹</a></p></li></ul><h2 id="keepalive" tabindex="-1"><code>&lt;KeepAlive&gt;</code> <a class="header-anchor" href="#keepalive" aria-hidden="true">#</a></h2><p>Caches dynamically toggled components wrapped inside.</p><p>동적으로 토글(toggle) 되는 컴포넌트를 캐싱합니다.</p><ul><li><p><strong>Props</strong></p><div class="language-ts"><pre><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">KeepAliveProps</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * If specified, only components with names matched by</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * `include` will be cached.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 지정하면 `include`와 일치하는 이름을 가진 컴포넌트만 캐시됩니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">include</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MatchPattern</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Any component with a name matched by `exclude` will</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * not be cached.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * &#39;exclude&#39;와 일치하는 이름을 가진 컴포넌트는 캐시되지 않습니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">exclude</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MatchPattern</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * The maximum number of component instances to cache.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * 캐시할 컴포넌트 인스턴스의 최대 수입니다.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">max</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MatchPattern</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">RegExp</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> (</span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">RegExp</span><span style="color:#A6ACCD;">)[]</span></span>\n<span class="line"></span></code></pre></div></li><li><p><strong>Details</strong></p><p>When wrapped around a dynamic component, <code>&lt;KeepAlive&gt;</code> caches the inactive component instances without destroying them.</p><p>동적 컴포넌트를 래핑할때 <code>&lt;KeepAlive&gt;</code>는 비활성되는 컴포넌트 인스턴스를 파괴하지 않고 캐시합니다.</p><p>There can only be one active component instance as the direct child of <code>&lt;KeepAlive&gt;</code> at any time.</p><p><code>&lt;KeepAlive&gt;</code>의 내부에는 단 하나의 컴포넌트 인스턴스만 활성화 됩니다.</p><p>When a component is toggled inside <code>&lt;KeepAlive&gt;</code>, its <code>activated</code> and <code>deactivated</code> lifecycle hooks will be invoked accordingly, providing an alternative to <code>mounted</code> and <code>unmounted</code>, which are not called. This applies to the direct child of <code>&lt;KeepAlive&gt;</code> as well as to all of its descendants.</p><p>컴포넌트가 <code>&lt;KeepAlive&gt;</code> 내에서 토글되면 그에 따라 <code>activated</code> 및 <code>deactivated</code> 수명 주기 후크가 호출되어 호출되지 않는 <code>mounted</code> 및 <code>unmounted</code> 에 대한 대안을 제공합니다. 이는 <code>&lt;KeepAlive&gt;</code>의 직계 자식과 모든 하위 항목에 적용됩니다.</p></li><li><p><strong>Example</strong></p><p>Basic usage:</p><div class="language-vue-html"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>When used with <code>v-if</code> / <code>v-else</code> branches, there must be only one component rendered at a time:</p><p><code>v-if</code> / <code>v-else</code> 분기와 함께 사용할 때 한 번에 하나의 컴포넌트만 렌더링되어야 합니다:</p><div class="language-vue-html"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">comp-a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-if</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;"> &gt; </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">comp-a</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">comp-b</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-else</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">comp-b</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>Used together with <code>&lt;Transition&gt;</code>:</p><p><code>&lt;Transition&gt;</code>과 함께 사용할때:</p><div class="language-vue-html"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Transition</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>Using <code>include</code> / <code>exclude</code>:</p><p><code>include</code> / <code>exclude</code> 사용:</p><div class="language-vue-html"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- comma-delimited string --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">include</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">a,b</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- regex (use `v-bind`) --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">include</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;/</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">/&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- Array (use `v-bind`) --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">include</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>Usage with <code>max</code>:</p><p><code>max</code> 사용:</p><div class="language-vue-html"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">max</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">is</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">view</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">component</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div></li><li><p><strong>See also:</strong> <a href="/guide/built-ins/keep-alive.html">Guide - KeepAlive</a></p></li><li><p><strong>참조:</strong> <a href="/guide/built-ins/keep-alive.html">가이드 - KeepAlive</a></p></li></ul><h2 id="teleport" tabindex="-1"><code>&lt;Teleport&gt;</code> <a class="header-anchor" href="#teleport" aria-hidden="true">#</a></h2><p>Renders its slot content to another part of the DOM.</p><p>슬롯 콘텐츠를 DOM의 다른 부분으로 렌더링합니다.</p><ul><li><p><strong>Props</strong></p><div class="language-ts"><pre><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TeleportProps</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Required. Specify target container.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Can either be a selector or an actual element.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">to</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HTMLElement</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/**</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * When `true`, the content will remain in its original</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * location instead of moved into the target container.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   * Can be changed dynamically.</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">   */</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">disabled</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">boolean</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div></li><li><p><strong>Example</strong></p><p>Specifying target container:</p><p>대상 컨테이너 지정:</p><div class="language-vue-html"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">teleport</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#some-id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">teleport</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.some-class</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">teleport</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">[data-teleport]</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"></span></code></pre></div><p>Conditionally disabling:</p><p>조건부로 비활성화:</p><div class="language-vue-html"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">teleport</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">to</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#popup</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">disabled</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">displayVideoInline</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">video</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./my-movie.mp4</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">teleport</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div></li><li><p><strong>See also:</strong> <a href="/guide/built-ins/teleport.html">Guide - Teleport</a></p></li><li><p><strong>참조:</strong> <a href="/guide/built-ins/teleport.html">가이드 - Teleport</a></p></li></ul><h2 id="suspense" tabindex="-1"><code>&lt;Suspense&gt;</code> <sup class="vt-badge experimental"></sup> <a class="header-anchor" href="#suspense" aria-hidden="true">#</a></h2><p>Used for orchestrating nested async dependencies in a component tree.</p><p>컴포넌트 트리에서 중첩된 비동기 의존성을 조정하는 데 사용됩니다.</p><ul><li><p><strong>Props</strong></p><div class="language-ts"><pre><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SuspenseProps</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">timeout</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div></li><li><p><strong>Events</strong></p><ul><li><code>@resolve</code></li><li><code>@pending</code></li><li><code>@fallback</code></li></ul></li><li><p><strong>Details</strong></p><p><code>&lt;Suspense&gt;</code> accepts two slots: the <code>#default</code> slot and the <code>#fallback</code> slot. It will display the content of the fallback slot while rendering the default slot in memory.</p><p><code>&lt;Suspense&gt;</code>는 <code>#default</code> 슬롯과 <code>#fallback</code> 슬롯이라는 두 개의 슬롯을 허용합니다. 메모리에서 기본 슬롯을 렌더링하는 동안 대체 슬롯의 내용을 표시합니다.</p><p>If it encounters async dependencies (<a href="/guide/components/async.html">Async Components</a> and components with <a href="/guide/built-ins/suspense.html#async-setup"><code>async setup()</code></a>) while rendering the default slot, it will wait until all of them are resolved before displaying the default slot.</p><p>렌더링하는 동안 비동기 종속성(<a href="/guide/components/async.html">Async Components</a> 및 <a href="/guide/built-ins/suspense.html#async-setup"><code>async setup()</code></a>이 있는 컴포넌트)이 발생하는 경우 기본 슬롯이 있는 경우 기본 슬롯을 표시하기 전에 모든 문제가 해결될 때까지 기다립니다.</p></li><li><p><strong>See also:</strong> <a href="/guide/built-ins/suspense.html">Guide - Suspense</a></p></li><li><p><strong>참조:</strong> <a href="/guide/built-ins/suspense.html">가이드 - Suspense</a></p></li></ul>',25)];var t=s(p,[["render",function(s,l,o,p,t,c){return a(),n("div",null,e)}]]);export{o as __pageData,t as default};
